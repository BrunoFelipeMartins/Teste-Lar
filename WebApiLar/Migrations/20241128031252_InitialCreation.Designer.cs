// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApiLar.Infra.Database;

#nullable disable

namespace WebApiLar.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241128031252_InitialCreation")]
    partial class InitialCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApiLar.Domain.Entity.Person", b =>
                {
                    b.Property<long>("idPerson")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("idPerson"));

                    b.Property<string>("active")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("dateBirth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("idPerson");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("WebApiLar.Domain.Entity.Telephone", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<long>("idPerson")
                        .HasColumnType("bigint");

                    b.Property<string>("number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("typeTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("idPerson");

                    b.ToTable("Telephone");
                });

            modelBuilder.Entity("WebApiLar.Infra.Database.Models.Person", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<string>("active")
                        .HasColumnType("text");

                    b.Property<string>("cpf")
                        .HasColumnType("text");

                    b.Property<string>("dateBirth")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("people");
                });

            modelBuilder.Entity("WebApiLar.Domain.Entity.Telephone", b =>
                {
                    b.HasOne("WebApiLar.Domain.Entity.Person", "person")
                        .WithMany("telephones")
                        .HasForeignKey("idPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("person");
                });

            modelBuilder.Entity("WebApiLar.Domain.Entity.Person", b =>
                {
                    b.Navigation("telephones");
                });
#pragma warning restore 612, 618
        }
    }
}
